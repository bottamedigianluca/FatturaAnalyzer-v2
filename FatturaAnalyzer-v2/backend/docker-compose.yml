version: '3.8'

services:
  fattura-analyzer-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: fattura-analyzer-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - DATABASE_PATH=/app/data/database.db
      - MAX_UPLOAD_SIZE=100
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./config.ini:/app/config.ini:ro
      - ./google_credentials.json:/app/google_credentials.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - fattura-network

  # Redis per caching (opzionale)
  redis:
    image: redis:7-alpine
    container_name: fattura-analyzer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - fattura-network
    profiles:
      - cache

  # Nginx reverse proxy (opzionale)
  nginx:
    image: nginx:alpine
    container_name: fattura-analyzer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - fattura-analyzer-api
    restart: unless-stopped
    networks:
      - fattura-network
    profiles:
      - proxy

  # Database backup service (opzionale)
  backup:
    image: alpine:latest
    container_name: fattura-analyzer-backup
    volumes:
      - ./data:/app/data:ro
      - ./backups:/app/backups
    command: |
      sh -c "
        while true; do
          echo 'Creating backup...'
          cp /app/data/database.db /app/backups/database_$(date +%Y%m%d_%H%M%S).db
          find /app/backups -name 'database_*.db' -mtime +7 -delete
          echo 'Backup completed'
          sleep 86400
        done
      "
    restart: unless-stopped
    profiles:
      - backup

networks:
  fattura-network:
    driver: bridge

volumes:
  redis_data:
